{"version":3,"sources":["components/header.component.js","components/about.component.js","components/switch.component.js","components/service.component.js","components/cases.component.js","components/lightbox.component.js","App.js","serviceWorker.js","index.js"],"names":["Header","e","preventDefault","link","currentTarget","dataset","goTo","document","getElementById","offsetLeft","window","scroll","className","onClick","Anchor","data-link","Component","About","id","Switch","props","type","ServiceText_1","TeamText_1","ServiceText_2","TeamText_2","ServiceText_3","TeamText_3","Service","state","switch","blocksService","getElementsByClassName","blocksTeam","fade","blocks","opacity","animation","i","style","animationName","this","setTimeout","setState","Change","Categories","cats","axios","get","then","res","data","catch","err","map","cat","index","to","_id","name","subcats","subcat","posts","length","Cases","clients","client","backgroundImage","icon","Posts","mapPosts","post","year","month","title","content","additions","addition","src","img","Lightbox","slogan","headerImg","count","request_params","location","pathname","split","property","counter","catName","App","path","render","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d89e7b07.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nexport default class Header extends Component{\n\n  Anchor(e){\n    e.preventDefault();\n\n    let link = e.currentTarget.dataset.link;\n    let goTo = document.getElementById(link).offsetLeft;\n\n    window.scroll(goTo, 0)\n  }\n\n  render (){\n    return(\n      <header>\n        <div className=\"logo\">\n        </div>\n        <span className=\"description\">\n          Коммуникационное агентство\n          со стратегическим фокусом.\n        </span>\n\n        <nav>\n          <ul className=\"nav-links\">\n            <li className=\"nav-item\"><a onClick={(e)=>this.Anchor(e)} data-link=\"about\">Мы</a></li>\n            <li className=\"nav-item\"><a onClick={(e)=>this.Anchor(e)} data-link=\"service\">Сервисы</a></li>\n            <li className=\"nav-item\"><a onClick={(e)=>this.Anchor(e)} data-link=\"cases\">Кейсы</a></li>\n            <li className=\"nav-item\"><a onClick={(e)=>this.Anchor(e)} data-link=\"contacts\">Контакты</a></li>\n          </ul>\n        </nav>\n        <div className=\"social\">\n          <span className=\"social-item\"></span>\n          <span className=\"social-item\"></span>\n        </div>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class About extends Component{\n  render (){\n    return(\n      <section id=\"about\">\n        <div className=\"about--header\"></div>\n        <p className=\"about--p-1\">\n          «Plan – это коммуникационное агентство с стратегическим фокусом. Наша задача Plan – это коммуникационное\n          агентство с стратегическим фокусом. Наша задача»\n          <br/>\n          <span>Ирина Ларцева, основательница агентства</span>\n        </p>\n        <p className=\"about--p-2\">\n          Plan – коммуникационное агентство\n           со стратегическим фокусом, основной задачей\n           котороого является Plan –коммуникационное агентство\n           со стратегическим фокусом, основной задачей котороого является\n        </p>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Switch extends Component {\n  render (){\n    return(\n      <label className=\"switch\">\n        <input onClick={ () => this.props.onClick() } type=\"checkbox\" />\n        <span className=\"slider\"></span>\n      </label>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Switch from './switch.component';\n\nclass ServiceText_1 extends Component{\n  render (){\n    return (\n      <ul className=\"service--changeable\">\n        <li>Стратегический и коммуникационный консалтинг</li>\n        <li>Концепция и позиционирование бренда</li>\n        <li>Коммуникационные и креативные стратегии</li>\n        <li>Медиа-планирование</li>\n      </ul>\n    );\n  }\n}\n\nclass TeamText_1 extends Component{\n  render (){\n    return (\n      <ul className=\"service--changeable\">\n        <li>контент-менеджер</li>\n        <li>ART-Директор</li>\n        <li>копирайтер</li>\n        <li>стратег</li>\n      </ul>\n    );\n  }\n}\n\nclass ServiceText_2 extends Component{\n  render (){\n    return (\n      <ul className=\"service--changeable\">\n        <li>Аудит рыночного положения бренда</li>\n        <li>Оценка эффективности текущей маркетинговой стратегии и рекламной активности</li>\n        <li>Маркетинговые исследования</li>\n        <li>Мониторинг коммуникационного поля бренда и конкурентов</li>\n      </ul>\n    );\n  }\n}\n\nclass TeamText_2 extends Component{\n  render (){\n    return (\n      <ul className=\"service--changeable\">\n        <li>аналитик</li>\n        <li>маркетолог</li>\n        <li>медиапланнер</li>\n      </ul>\n    );\n  }\n}\n\nclass ServiceText_3 extends Component{\n  render (){\n    return (\n      <ul className=\"service--changeable\">\n        <li>PR</li>\n        <li>SMM – создание, ведение и продвижение</li>\n        <li>Лидеры мнений / Звездные блогеры</li>\n        <li>Спецпроекты во всех видах СМИ и блогосфере</li>\n      </ul>\n    );\n  }\n}\n\nclass TeamText_3 extends Component{\n  render (){\n    return (\n      <ul className=\"service--changeable\">\n        <li>PR-менеджер</li>\n        <li>SMM-менеджер</li>\n        <li>Продюссер спецпроектов</li>\n      </ul>\n    );\n  }\n}\n\nexport default class Service extends Component{\n\n  state = {\n    switch: 0,\n  };\n\n  Change(){\n\n    let blocksService = document.getElementsByClassName('service--text-service');\n    let blocksTeam = document.getElementsByClassName('service--text-team');\n\n    let fade = (blocks ,opacity, animation) => {\n      for( let i = 0; i < 3; i++ ){\n        blocks[i].style.opacity = opacity;\n        blocks[i].style.animationName = animation;\n      }\n    }\n\n    if (!this.state.switch){\n\n      fade( blocksService, 1, 'fadeOut');\n\n      setTimeout( () => {\n        this.setState({switch: 1});\n        fade( blocksTeam, 0, 'fadeIn');\n      } , 500);\n\n    }else{\n      fade( blocksTeam, 1, 'fadeOut');\n\n      setTimeout( () => {\n        this.setState({switch: 0});\n        fade( blocksService, 0, 'fadeIn');\n      } , 500);\n    }\n  };\n\n  render (){\n\n    return(\n      <section id=\"service\">\n        <div className=\"controls-container\">\n          <h2 className={ this.state.switch ? '' : 'selected' }>Сервис</h2>\n          <Switch onClick={ () => this.Change() } />\n          <h2 className={ this.state.switch ? 'selected' : '' }>Команда</h2>\n        </div>\n\n        <div className={ this.state.switch ? 'service--text-1  service--text-team' : 'service--text-1 service--text-service' }>\n          <h2>Стратегируем</h2>\n          { this.state.switch ? <TeamText_1/> : <ServiceText_1/> }\n        </div>\n\n        <div className={ this.state.switch ? 'service--text-2  service--text-team' : 'service--text-2 service--text-service' }>\n          <h2>Исследуем</h2>\n          { this.state.switch ? <TeamText_2/> : <ServiceText_2/> }\n        </div>\n\n        <div className={ this.state.switch ? 'service--text-3  service--text-team' : 'service--text-3 service--text-service' }>\n          <h2>Коммуницируем</h2>\n          { this.state.switch ? <TeamText_3/> : <ServiceText_3/> }\n        </div>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Categories extends Component{\n\n  state = {\n    cats: []\n  }\n\n  componentDidMount(){\n    axios.get('/api/cats')\n      .then( res => { const cats = res.data; this.setState({ cats }); } )\n      .catch( err => this.setState({ cats: err }) );\n  }\n\n  render(){\n    return(\n      <div className=\"cases--categories-container\">\n        <div className=\"cases--description\">\n          <h2>Наш опыт:</h2>\n          <p>\n            За большими словами стоят\n            большие дела выберете любой\n            из интересующих кейсов\n          </p>\n        </div>\n\n        { this.state.cats.map( (cat, index) =>\n\n          <div className={ \"cases--category cases--category-\" + ++index }>\n            <h2><Link to={ 'posts/cat=' + cat._id }>{cat.name}</Link></h2>\n            <ul>\n              { cat.subcats.map( subcat =>\n                <li>\n                  <span>{ subcat.posts.length }</span>\n                  <Link to={ 'posts/scat=' + subcat._id }>{subcat.name}</Link>\n                </li>\n              )}\n            </ul>\n          </div>\n         ) }\n      </div>\n    )\n  }\n}\n\n\nexport default class Cases extends Component{\n\n  state = {\n    clients: []\n  }\n\n  componentDidMount(){\n    axios.get('/api/clients')\n      .then( res => { const clients = res.data; this.setState({ clients }); } )\n      .catch( err => this.setState({ clients: err }) );\n  }\n\n  render (){\n    return(\n      <section id=\"cases\">\n      { this.state.clients.length > 0 ?\n        <Categories />:null}\n      { this.state.clients.length > 0 ?  <div className=\"cases--clients-container\">\n          { this.state.clients.map( client =>\n            <div className=\"cases--client\">\n              <h2><Link to={ 'posts/client=' + client._id }>{ client.name }</Link></h2>\n              { client.cats.map( cat => <i style={{ backgroundImage: 'url(' + cat.icon + ')' }}></i> ) }\n            </div>\n          ) }\n        </div>:null}\n\n      </section>\n\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Posts extends Component{\n  render(){\n    return(\n      <div className=\"lightbox-posts\">\n        { this.props.mapPosts( post =>\n            <div className=\"post\">\n              <div className=\"post--text\">\n                <span className=\"post--date\"><span>{post.year}</span>{post.month}</span>\n                <h2 className=\"post--title\">{post.title}</h2>\n                <p className=\"post--content\">{post.content}</p>\n                <h3 className=\"post--results\">Зацените:</h3>\n                <ul className=\"post--results\">{post.additions.map( addition =>\n                  <li><span>{addition[0]}</span>{addition[1]}</li>\n                )}</ul>\n              </div>\n              <img className=\"post--img\" src={ post.img }/>\n            </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default class Lightbox extends Component{\n\n  state = {\n    posts: [],\n    client: '',\n    slogan: '',\n    headerImg: ''\n  }\n\n  count = [0,0,0];\n\n  request_params = window.location.pathname.split(\"posts\")[1];\n\n  componentDidMount(){\n    axios.get(`/api/posts/${this.request_params}`)\n      .then(res => {\n        const posts = res.data;\n        this.setState({ title: posts[0].client.name });\n        this.setState({ slogan: posts[0].client.slogan });\n        this.setState({ headerImg: posts[0].client.img });\n        this.setState({ posts });\n       })\n      .catch(err => this.setState({ posts: err }));\n  };\n\n  mapPosts = (property) => this.state.posts.map(property);\n\n  counter = () => {\n\n    this.mapPosts( post => {\n      let catName = post.cat.name;\n\n      if( catName === 'Аналитика' ) this.count[0]++\n      else if ( catName === 'Стратегия' ) this.count[1]++\n      else if ( catName === 'Коммуникация' ) this.count[2]++\n    });\n  };\n\n  render(){\n\n    if (this.state.posts.length > 0) this.counter();\n\n    return(\n      <div id=\"lightbox\">\n        { this.state.posts.length > 0 ?\n        <section id=\"posts\">\n          <div className=\"lightbox-header\" style={{ backgroundImage: \"url(\" + this.state.headerImg + \")\" }}>\n            <h2>{ this.state.title }</h2>\n            <h3>{ this.state.slogan }</h3>\n            <ul className=\"lightbox-header--count\">\n              <li><span>{ this.count[0] }</span>Аналитических проектов</li>\n              <li><span>{ this.count[1] }</span>Выстроенных стратегий</li>\n              <li><span>{ this.count[2] }</span>Успешных коммуникаций</li>\n            </ul>\n          </div>\n\n          <Posts mapPosts={ (property) => this.mapPosts(property) }/>\n\n        </section>\n         : null }\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Header from './components/header.component';\nimport About from './components/about.component';\nimport Service from './components/service.component';\nimport Cases from './components/cases.component';\nimport Lightbox from './components/lightbox.component'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <Router>\n          <About />\n          <Service />\n          <Cases />\n          <Route path=\"/posts\" render={ () => <Lightbox/> } />\n        </Router>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}